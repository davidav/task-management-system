name: Deploy Docker's container to Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: echo "REPO=${{ github.repository }}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build project with Maven (skip tests)
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile

      # Шаг аутентификации в GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Шаг загрузки Docker образа из GHCR
      - name: Pull Docker image from GitHub Container Registry
        run: docker pull ghcr.io/${{ env.REPO }}:${{ github.sha }} || true  # Добавлено || true, чтобы не прерывать выполнение в случае ошибки

      # Шаг сохранения Docker образа в tar файл
      - name: Save Docker image to a tar file
        run: |
          docker save -o my-container.tar ghcr.io/${{ env.REPO }}:${{ github.sha }}
          echo "Saved Docker image to my-container.tar"

      # Шаг проверки наличия tar файла
      - name: Check if Docker image tar file exists
        run: |
          if [ -f "my-container.tar" ]; then
            echo "Файл my-container.tar найден."
            ls -l my-container.tar
          else
            echo "Файл my-container.tar не найден!"
            exit 1
          fi

      # Шаг изменения прав доступа к tar файлу
      - name: Change permissions on tar file
        run: chmod 666 my-container.tar

      # Шаг отправки tar файла на сервер
      - name: Copy Docker image to server via SCP
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "my-container.tar"
          target: "/home/${{ secrets.WORK_DIR }}/my-container.tar"


      # Шаг разворачивания контейнера на сервере через SSH
      - name: Deploy Docker container on server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "server hello"
            ls
#            if [ -f "/home/${{ secrets.WORK_DIR }}/my-container.tar" ]; then
#                echo "Файл my-container.tar найден."
#                # Права на файл
#                chmod 666 /home/${{ secrets.WORK_DIR }}/my-container.tar
#                # Загрузка образа
#                docker load -i /home/${{ secrets.WORK_DIR }}/my-container.tar
#                docker run -d -p 80:80 ghcr.io/${{ env.REPO }}:${{ github.sha }}
#            else
#                echo "Файл my-container.tar не найден!"
#                exit 1
#            fi
