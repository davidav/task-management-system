name: Java CI and Deploy with Maven and Docker

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Compile and package the application
        run: mvn --batch-mode clean package

      - name: Run tests
        run: mvn --batch-mode test

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: task-management-system
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set environment variables
        run: echo "REPO=${{ github.repository }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}:${{ github.sha }}
            ghcr.io/${{ env.REPO }}:latest
          file: ./Dockerfile

      - name: Copy Docker image to server via SCP
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "ghcr.io/${{ env.REPO }}:${{ github.sha }}"
          target: "/home/docker-image/task-container.tar"

      - name: Deploy Docker container on server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Stop and delete old container"
            docker stop tsm_app || true
            docker rm tsm_app || true
            echo "Running new container"
            docker run --name tsm_app -d --network tsm-network -p 8181:8181 ghcr.io/${{ env.REPO }}:${{ github.sha }}
            echo "Deployment complete"

      - name: Check if container is running
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if [ $(docker ps -q -f name=tsm_app) ]; then
              echo "Container is running"
            else
              echo "Container failed to start" && exit 1

